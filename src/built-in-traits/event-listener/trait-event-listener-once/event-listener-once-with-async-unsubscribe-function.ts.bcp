import {
  TGenericKeyValueTupleUnion, TInferKeyValueTupleUnionGKey, TInferKeyValueTupleUnionGValueFromKey
} from '../event-listener-types';
import { TraitEventListenerOn } from '../trait-event-listener-on/trait-event-listener-on';
import {
  EventListenerOnWithAsyncUnsubscribe, TEventListenerOnUnsubscribeAsync
} from '../trait-event-listener-on/event-listener-on-with-async-unsubscribe.ts.bcp';
import { TraitEventListenerIsDispatching } from '../trait-event-listener-is-dispatching/trait-event-listener-is-dispatching';


export interface IEventListenerOnceWithAsyncUnsubscribeEventListener<GKeyValueTupleUnion extends TGenericKeyValueTupleUnion> extends TraitEventListenerOn<any, GKeyValueTupleUnion>, TraitEventListenerIsDispatching<any> {
}

export function EventListenerOnceWithAsyncUnsubscribe<GKeyValueTupleUnion extends TGenericKeyValueTupleUnion, GKey extends TInferKeyValueTupleUnionGKey<GKeyValueTupleUnion>>(
  eventListener: IEventListenerOnceWithAsyncUnsubscribeEventListener<GKeyValueTupleUnion>,
  key: GKey,
  callback: (value: TInferKeyValueTupleUnionGValueFromKey<GKeyValueTupleUnion, GKey>) => void,
): TEventListenerOnUnsubscribeAsync {
  const unsubscribe: TEventListenerOnUnsubscribeAsync = EventListenerOnWithAsyncUnsubscribe<GKeyValueTupleUnion, GKey>(
    eventListener,
    key,
    (value: TInferKeyValueTupleUnionGValueFromKey<GKeyValueTupleUnion, GKey>) => {
      unsubscribe();
      callback(value);
    }
  );
  return unsubscribe;
}
